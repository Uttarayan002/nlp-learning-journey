# -*- coding: utf-8 -*-
"""3. Text summarization

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/140j3qUvsw7QoSYcZ7a3JNrNIWq0zuJbS

## What is Extractive Summarization?
It selects the most important sentences from the original text to form a summary - like highlighting only the best lines in a news article.

### Algorithm: TextRank (Like PageRank for Sentences)
Each sentence is a node

Edges = similarity (semantic or TF-IDF)

Run a graph algorithm to rank sentences

Pick top n scored sentences as summary
"""

!pip install sumy

text= """Balerion was eventually claimed by Lord Aegon Targaryen, some time before he married his sisters Visenya and Rhaenys.
Aegon became involved in the wars in the Disputed Lands when Pentos and Tyrosh approached him, inviting him to join a grand alliance against Volantis, and he chose to heed their call.
Mounting Balerion, he flew east to meet the Prince of Pentos and the magisters of the Free City, then flew to Lys in time to set ablaze a Volantene fleet trying to take the city"""

import sumy
import nltk
from sumy.parsers.plaintext import PlaintextParser
from sumy.nlp.tokenizers import Tokenizer
from sumy.summarizers.text_rank import TextRankSummarizer

nltk.download('punkt_tab')

# Parser and tokenizer
parser = PlaintextParser.from_string(text, Tokenizer("english"))

summarizer = TextRankSummarizer()

summary = summarizer(parser.document, 2) #top 2

for sentence in summary:
    print(sentence)